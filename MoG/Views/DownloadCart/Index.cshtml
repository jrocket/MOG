@model IEnumerable<MoG.Domain.Models.VMDownloadCartItem>

@{
    ViewBag.Title = "My Cart";
}
<div class="row">
    <div class="col-md-12">

        <h1 class="page-header">@Resource.PROFILE_PageTitle</h1>

    </div>
</div>

<div class="row">
    @Html.Partial("/Views/Account/_LeftMenu.cshtml")

    <div class="col-lg-10">

        <div class="row" data-bind="visible: (IsThereAnyRow() == false)">
            <div class="col-lg-12">
                <h4>@Resource.COMMON_DownloadCart</h4>
            </div>
            <div class="col-lg-12">
               <p>@Resource.PROFILE_NoFileInCart</p>
            </div>
        </div>

        <div class="row" data-bind="visible:IsThereAnyRow" >
            <div class="col-lg-12">
                <h4>@Resource.COMMON_DownloadCart</h4>
            </div>
            <div class="col-lg-12">
                <a href="#" data-bind="click:btnClearCartClicked" class="btn-danger btn">Clear Cart</a>
            </div>
            <div class="col-lg-12">
                <table class="table">
                    <thead>
                        <tr>
                            <th></th>
                            <th>Name</th>
                            <th>Url</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody data-bind="foreach: items">
                        <tr>
                            <td data-bind="text:Id"></td>
                            <td data-bind="text: FileName"></td>
                            <td><a data-bind="text: Url,  attr: { href: Url }"></a></td>
                            <td><a href="#" data-bind="click:$parent.btnDeleteClicked"><span class="glyphicon glyphicon-trash"></span> </a></td>
                        </tr>
                    </tbody>
                </table>

            </div>
        </div>
    </div>
</div>


@section scripts
{
    @Scripts.Render("~/bundles/knockout")


    <script>
        // Overall viewmodel for this screen, along with initial state
        function DownloadCartVM() {
            var self = this;



            self.items = ko.observableArray(@Html.Raw(Json.Encode(Model)));
         

            self.IsThereAnyRow = ko.computed(function () {
                return (self.items().length > 0);
            }, this);
            self.btnDeleteClicked = function (data) {
                if (confirm("are you sure")) {
                    var url = '@Url.Action("Delete")';
                    var json = { id: data.Id };
                    $.post(url, json, function (result) {
                        self.items.remove(data);
                    });
                }
            }

            self.btnClearCartClicked = function () {
                if (confirm("are you sure")) {
                    var url = '@Url.Action("ClearCart")';
                    $.post(url, null, function (result) {
                        self.items.removeAll();
                    });
                }
            }
        }

        ko.applyBindings(new DownloadCartVM());
    </script>
}
