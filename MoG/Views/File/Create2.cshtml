@model IList<MoG.Domain.Models.VMFile>

@using (Html.BeginForm("Create2", "File", FormMethod.Post, new { @class = "form-inline" }))
{
    @Html.AntiForgeryToken()

    <div class="row" style="padding-bottom:4px;">
        <div class="col-lg-7">
            <button type="button" class="btn btn-primary start" data-bind="click: btnSubmitClicked">
                <i class="glyphicon glyphicon-upload"></i>
                <span>@Resource.COMMON_Submit</span>
            </button>
            <a class="btn btn-warning cancel" href="#" data-bind="click : btnCancelClicked" role="button">
                <i class="glyphicon glyphicon-ban-circle"></i>
                <span>@Resource.COMMON_Cancel</span>
            </a>


        </div>
    </div>

    <div class="form-horizontal">

        <div class="row" style="padding-bottom:4px;">
            <div class="col-xs-2">
                <strong>@Resource.FILE_FileName</strong>
            </div>
            <div class="col-xs-3">
                <strong>@Resource.COMMON_Tags</strong>
            </div>
            <div class="col-xs-4">
                <strong>@Resource.COMMON_Description</strong>
            </div>
        </div>
        @if (Model.Count > 0)
        {
            for (var i = Model.Count() - 1; i >= 0; i--)
            {

                <div class="row" style="padding-bottom:4px;">
                    <div class="col-xs-2">
                        @Html.HiddenFor(f => f[i].Project.Id)
                        @Html.HiddenFor(f => f[i].File.Id)
                        @Html.TextBoxFor(f => f[i].File.Name, new { @class = "form-control" })
                    </div>
                    <div class="col-xs-2">
                        @Html.TagsInputFor(f => f[i].File.Tags, "form-control")
                    </div>
                    <div class="col-xs-8">

                        @Html.TextAreaFor(f => f[i].File.Description, new { @class = "form-control" })
                    </div>
                </div>
            }
        }
    </div>

}



@Scripts.Render("~/bundles/knockout")

<script>
    function Create2VM() {

        var self = this;

        this.btnCancelClicked = function () {
            if (confirm("@Resource.COMMON_AreYouSure")) {
                var url = "@Url.Action("CancelUpload","File",new{id=ViewBag.ProjectId})";
                window.location.href = url;
            }
        };

        this.btnSubmitClicked = function () {
            $('[data-role=tagsinput]').tagsinput('refresh');
            var $taginputControl = $('[data-role=tagsinput]');
            var $elt = $taginputControl.tagsinput('input');
            if ($elt && $elt[0] && $elt[0].value != "") {
                //we have a pending tag, let's add it to the list
                if (/\S/.test($elt[0].value)) {
                    // string is not empty and not just whitespace
                    $taginputControl.tagsinput('add', $elt[0].value);
                }
            }
            $("form").submit();
        };

    }

    ko.applyBindings(new Create2VM());

    $().ready(function () {
        $('[data-role=tagsinput]').tagsinput('refresh');
    });


</script>