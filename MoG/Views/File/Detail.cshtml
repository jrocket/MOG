@model MoG.Domain.Models.MoGFile
@{
    ViewBag.Title = "Detail";
}

<div class="container">
    <div class="row">
        <div class="col-lg-12">
            <h1 class="page-header">
                @Html.ActionLink(Model.Project.Name, "Files", "Project", new { id = @Model.ProjectId }, null) /
                @Html.DisplayFor(model => model.Name) <small>by @Html.DisplayFor(model => model.Creator.DisplayName)</small>
            </h1>
        </div>
    </div>
    @*@Html.Partial("_TopNavigationTab",Model.Project)*@

    <div class="row">
        <div class="col-md-8">
            <button type="button" class="btn btn-default">Telecharger</button>
            <button type="button" class="btn btn-primary">Accepter</button>
            <button type="button" class="btn btn-success">Promouvoir</button>
            <button type="button" class="btn btn-danger">Supprimer</button>


        </div>
        <div class="col-md-4">
        </div>

    </div>
    <div class="row">
        <div class="col-md-8">
            <img class="img-responsive" src="http://placehold.it/750x200">

        </div>

        <div class="col-md-4">
            <h4>Detail de la piste</h4>
            <dl>
                <dt>@Html.LabelFor(model => model.CreatedOn)</dt>
                <dd>@Html.DisplayFor(model => model.CreatedOn, "LongDateString")</dd>
            </dl>
            <dl>
                <dt>@Html.LabelFor(model => model.Description)</dt>
                <dd>@Html.DisplayFor(model => model.Description)</dd>
            </dl>
            <dl>
                <dt>@Html.LabelFor(model => model.Tags)</dt>
                <dd>@Html.DisplayFor(model => model.Tags)</dd>
            </dl>
            <dl>
                <dt>Metrics</dt>
                <dd>played @Model.PlayCount | Likes @Model.Likes | Downloaded @Model.DownloadCount</dd>
            </dl>
        </div>
    </div>
    <div class="row">
        <hr />
    </div>

    <div data-bind="foreach: comments">
        <div class="row">
            <div class="col-md-1">
                <img src="http://placehold.it/75x75&text=john+smith" />
            </div>
            <div class="col-md-7">
                <div class="panel panel-default">
                    <div class="panel-body">
                        <p>
                            <h4 data-bind="text: CreatorName"></h4>
                            <span data-bind="text: Body"></span>
                            <br /><small data-bind="text: CreatedOnAsString"></small>
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <form>
            <div class="clearfix"></div>
            <div class="form-group col-lg-8">
                <label for="input4">Message</label>
                <textarea name="message" class="form-control" data-bind="value: newBody" rows="6" id="input4"></textarea>
            </div>
            <div class="form-group col-lg-8">
                <input type="hidden" name="save" value="contact">
                <button class="btn btn-primary" data-bind="click: btnCreateComment">Submit</button>
            </div>
        </form>
    </div>

</div><!-- /.container -->
@section Scripts{
    @Scripts.Render("~/bundles/knockout")
    <script>
        function CommentListVM() {

            var self = this;

            this.comments = new ko.observableArray();
            this.newBody = new ko.observable();
            this.fileId = new ko.observable(@Model.Id);

            $(document).ready(function () {
                console.dir(ko.toJSON({ "id": self.fileId(), "_nocache": new Date().getMilliseconds() }));
                $.ajax({
                    url: '/File/GetComments',
                    dataType: 'json',
                    data: { "id": self.fileId(), "_nocache" : new Date().getMilliseconds()} ,
                    success: function (data) {
                        self.comments(data);
                      
                    }
                });
            });


            this.btnCreateComment = function () {
                console.dir(self.fileId());
                $.ajax({
                    url: '/Comment/Create',
                    type: 'post',
                    dataType: 'json',
                    data:  ko.toJSON({"fileId" : self.fileId(),  "body" : self.newBody() }),
                    contentType: 'application/json',
                    success: function (result) {
                        self.comments.push(result);
                        self.newBody("");
                        //                window.location.href = urlPath + '/';
                    },
                    error: function (err) {
                        if (err.responseText == "success")
                        { window.location.href = urlPath + '/'; }
                        else {
                            alert(err.responseText);
                        }
                    },
                    complete: function () {
                    }
                });
                return false;

            };



        };

        ko.applyBindings(new CommentListVM());







    </script>


}
