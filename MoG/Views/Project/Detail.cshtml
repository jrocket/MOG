@model MoG.Domain.Models.Project
@{
    ViewBag.Title = "Detail";
}
<div class="container">


    @Html.Partial("_TopNavigationTab", Model)
    <div class="row">
        <div class="col-md-12">
            <hr>
            <p>
                <i class="icon-time"></i> Posted on @Html.DisplayFor(m => m.CreatedOn, "LongDateString")
                <button type="button"  class="btn btn-warning" data-bind="click:btnEditClicked, visible: (displayMode() == 'display') "> Editer</button>
                <button type="button" class="btn btn-primary" data-bind="click:btnSaveClicked, visible: (displayMode()== 'edit') "> Save</button>
                <button type="button" class="btn btn-danger" data-bind="click:btnCancelClicked, visible: (displayMode()== 'edit') "> Cancel</button>
            </p>
            <hr>
        </div>
    </div>
    <div class="row" id="MainContent">

        @Html.Partial("Display", Model);

    </div>

</div><!-- /.container -->
@section scripts{
    @Scripts.Render("~/bundles/knockout")
    <script>

        function DetailVM() {
            var self = this;
            self.displayMode = ko.observable("display");

            self.btnEditClicked = function () {
                self.displayMode("edit");
                $.get('@Url.Action("Edit", new {id = Model.Id })', function (data) {
                    $('#MainContent').replaceWith(data);
                });
            };

            self.btnSaveClicked = function () {
                self.displayMode("display");
               //TODO : switch this to the edit.cshtml viewmodel
            };

            self.btnCancelClicked = function () {
                self.displayMode("display");
                //TODO : switch this to the edit.cshtml viewmodel
            };
        }

        ko.applyBindings(new DetailVM());

    </script>
}

