@model MoG.Domain.Models.VMProject
@{
    ViewBag.Title = "Administration";
}

<div class="container">

    @Html.Partial("_TopNavigationTab", Model)


    <style>
        .btn:not(.btn-block) {
            width: 120px;
            margin-bottom: 10px;
        }

        .adminSection {
            padding-top: 10px;
        }
    </style>
    <div class="row adminSection">
        <div class="col-md-3">
            <div class="row" data-bind="foreach: menuEntries">

                <a href="#" data-bind="click : $parent.btnAdminClicked , css: button" role="button"><span data-bind="css: icon"></span> <br /><span data-bind="text: text "></span></a>

            </div>
        </div>

        <div class="col-md-9">
            <div id="dynamicContent"></div>
        </div>
    </div>

    @section scripts
    {
  

        @Scripts.Render("~/bundles/knockout")
    <script type="text/javascript" src="@Url.Content("~/Scripts/Views/Project/BtnFollow.js")"></script>

        <script>

            // Constructor for an object with two properties
            var SelectItem = function (name, value) {
                this.Name = name;
                this.Value = value;
            };

           function menuEntry(text, icon, url, button) {
                var self = this;
                self.text = text;
                self.icon = icon;
                self.url = url;
                self.button = button;
            }


            function ProjectAdministrationVM() {

                var self = this;
              

                $.getJSON('@Url.Action("JSON",new {id = @Model.Project.Id})', function (data) {
                    self.Project = ko.observable(data);
                   
                });


                this.message = ko.observable();
                this.isMessageVisible = ko.observable(false);


                self.menuEntries = ko.observableArray([
                @*new menuEntry('@Resource.PROJECT_Admin_Reports', "glyphicon glyphicon-signal", '@Url.Action("AdminReports", "Project", new { id = Model.Project.Id })', "btn btn-default btn-lg"),*@
                new menuEntry('@Resource.PROJECT_Admin_Parameters', "glyphicon glyphicon-list-alt", '@Url.Action("AdminSettings","Project", new { id = Model.Project.Id } )', "btn btn-danger btn-lg"),
                new menuEntry('@Resource.PROJECT_Admin_Follow', "glyphicon glyphicon-eye-open", '@Url.Action("AdminFollow", "Project", new { id = Model.Project.Id })', "btn btn-warning btn-lg"),
                new menuEntry('@Resource.PROJECT_Admin_Comments', "glyphicon glyphicon-comment", '@Url.Action("AdminComments", "Project", new { id = Model.Project.Id })', "btn btn-primary btn-lg"),
                new menuEntry('@Resource.PROJECT_Admin_Collabs', "glyphicon glyphicon-user", '@Url.Action("AdminCollabs", "Project", new { id = Model.Project.Id })', "btn btn-success btn-lg"),
                new menuEntry('@Resource.PROJECT_Admin_Notes', "glyphicon glyphicon-file", '@Url.Action("AdminNotes", "Project", new { id = Model.Project.Id })', "btn btn-info btn-lg"),
                new menuEntry('@Resource.PROJECT_Admin_Artwork', "glyphicon glyphicon-picture", '@Url.Action("AdminArtwork", "Project", new { id = Model.Project.Id })', "btn btn-success btn-sucess2 btn-lg"),
                new menuEntry('@Resource.PROJECT_Admin_Invits', "glyphicon glyphicon-tag", '@Url.Action("AdminInvits", "Project", new { id = Model.Project.Id })', "btn btn-danger btn-danger2 btn-lg")

                ]);



                self.btnAdminClicked = function (menuEntry) {

                    $.get(menuEntry.url, function (data) {
                        var $partialContent = $("#PartialContent");

                     
                        $('#dynamicContent').html(data);
                        ko.applyBindings(self, $("#PartialContent").get(0));
                    });
                };

                self.btnSaveClicked = function (data) {
                    $.post('@Url.Action("SaveProjectSettings")', data.Project(), function (result) {
                        if (result == true) {
                            self.message("Project saved!");
                            self.isMessageVisible(true);
                            setInterval(self.hideMessage, 3000);

                        }
                    });
                }

                self.hideMessage = function () {
                    self.isMessageVisible(false);
                }

                //$.get(self.menuEntries()[0].url, function (data) {
                //    $('#dynamicContent').html(data);
                //});


            }

            var projectAdministrationBindingRoot = new ProjectAdministrationVM();


            var object = $.extend(projectAdministrationBindingRoot, new BtnFollowVM({
                id: '@Model.Project.Id',
                urlLike: '@Url.Action("ILike", "Like")',
                urlFollow: '@Url.Action("Follow", "Follow")',
                urlUnFollow: '@Url.Action("UnFollow", "Follow")',
                isFollowed: '@Model.IsFollowed'
            }));


            ko.applyBindings(projectAdministrationBindingRoot);


        </script>
    }




</div>
