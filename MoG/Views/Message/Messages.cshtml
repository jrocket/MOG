@{
    ViewBag.Title = "Messages";
}

<div class="row">
    <div class="col-md-12">

        <h1 class="page-header">@ViewBag.Title</h1>

    </div>
</div>
<div class="row">
    @Html.Partial("_LeftMenu")
    <div class="col-lg-10">
        <div>
            <button type="button" class="btn btn-default  btn-block" onclick="showMsgForm()" id="btnNewMessage">Ecrire un nouveau message</button>
        </div>
        <div class="panel panel-default hidden" id="pnlNewMessage">
            <div class="panel-body">
                <button type="button" class="close" aria-hidden="true" onclick="hideMsgForm()">&times;</button>
                <div class="row">
                    <form role="form" class="form-horizontal">
                        <div class="form-group">

                            <label for="to" class="col-sm-2 control-label">Pour</label>
                            <div class="col-sm-9">
                                <input type="text" class="form-control" name="to" />
                            </div>
                        </div>
                        <div class="form-group">
                            <label for="message" class="col-sm-2 control-label">Message</label>
                            <div class="col-sm-9">
                                <textarea class="form-control" rows="3" name="message"></textarea>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-sm-offset-2 col-sm-10">
                                <button type="submit" class="btn btn-default">Envoyer</button>
                            </div>
                        </div>
                    </form>
                </div>

            </div>
        </div>
        <div data-bind="foreach : messages">
            <div class="panel panel-default">
                <div class="panel-heading">
                    <div class="row">
                        <div class="col-sm-6"><span data-bind="text: Sender"></span> | <span data-bind="text: SentOn"></span>... (TODO : Replyed on )</div>
                        <div class="col-sm-offset-1 col-sm-2">
                            <span class="glyphicon glyphicon-comment"></span>
                            <span class="glyphicon glyphicon-zoom-in"></span>
                        </div>
                        <div class="col-sm-offset-2 col-sm-1">
                            <span class="glyphicon glyphicon-trash"></span>
                        </div>
                    </div>
                </div>
                <div class="panel-body">
                    <p><strong><span data-bind="text :Title"></span></strong><br />
                        <span data-bind="text :Body"></span>
                    </p>
                </div>
            </div>
        </div>
    </div>
</div>


@section scripts
{
    @Scripts.Render("~/bundles/knockout")

    <script type="text/javascript">
        function showMsgForm() {
            $("#pnlNewMessage").removeClass("hidden");
            $("#btnNewMessage").addClass("hidden");
            return false;
        }
        function hideMsgForm() {
            $("#pnlNewMessage").addClass("hidden");
            $("#btnNewMessage").removeClass("hidden");
            return false;
        }

        // Class to represent a row in the seat reservations grid
        function Message(from, to, createdOn, title, body) {
            var self = this;
            self.from = from;
            self.to = to;
            self.createdOn = createdOn;
            self.title = title;
            self.body = body;
            self.bodyAbstract = ko.computed(function () {
                var bodyabstract = body.substring(1, 4);
                return bodyabstract;
            });
        }


        function MessageVM() {

            var self = this;

            this.messages = new ko.observableArray();



            $(document).ready(function () {
              
                $.ajax({
                    url: '/Message/GetInbox',
                    dataType: 'json',
                    data: { "_nocache": new Date().getMilliseconds() },
                    success: function (data) {
                        self.messages(data);
                    }
                });
            });


            //this.btnCreateComment = function () {
            //    console.dir(self.fileId());
            //    $.ajax({
            //        url: '/Comment/Create',
            //        type: 'post',
            //        dataType: 'json',
            //        data:  ko.toJSON({"fileId" : self.fileId(),  "body" : self.newBody() }),
            //        contentType: 'application/json',
            //        success: function (result) {
            //            self.comments.push(result);
            //            self.newBody("");
            //            //                window.location.href = urlPath + '/';
            //        },
            //        error: function (err) {
            //            if (err.responseText == "success")
            //            { window.location.href = urlPath + '/'; }
            //            else {
            //                alert(err.responseText);
            //            }
            //        },
            //        complete: function () {
            //        }
            //    });
            //    return false;

            //};



        };

        ko.applyBindings(new MessageVM());


    </script>


}